<?php

namespace entities\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class entitiesRoleResourceProxy extends \entities\RoleResource implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setRole(\entities\Role $role)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function getResource()
    {
        $this->__load();
        return parent::getResource();
    }

    public function setResource(\entities\Resource $resource)
    {
        $this->__load();
        return parent::setResource($resource);
    }

    public function getPrivilege()
    {
        $this->__load();
        return parent::getPrivilege();
    }

    public function setPrivilege($privilege)
    {
        $this->__load();
        return parent::setPrivilege($privilege);
    }

    public function isAllowed()
    {
        $this->__load();
        return parent::isAllowed();
    }

    public function setAllowed($allow = true)
    {
        $this->__load();
        return parent::setAllowed($allow);
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function setValidator(\Equ\Object\Validator $validator)
    {
        $this->__load();
        return parent::setValidator($validator);
    }

    public function getValidator()
    {
        $this->__load();
        return parent::getValidator();
    }

    public function validate()
    {
        $this->__load();
        return parent::validate();
    }

    public function offsetExists($offset)
    {
        $this->__load();
        return parent::offsetExists($offset);
    }

    public function offsetGet($offset)
    {
        $this->__load();
        return parent::offsetGet($offset);
    }

    public function offsetSet($offset, $value)
    {
        $this->__load();
        return parent::offsetSet($offset, $value);
    }

    public function offsetUnset($offset)
    {
        $this->__load();
        return parent::offsetUnset($offset);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'role', 'resource', 'allowed', 'privilege');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}