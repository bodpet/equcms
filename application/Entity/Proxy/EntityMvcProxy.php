<?php

namespace Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class EntityMvcProxy extends \Entity\Mvc implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    private function _load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    
    public function generateUrl()
    {
        $this->_load();
        return parent::generateUrl();
    }

    public function getId()
    {
        $this->_load();
        return parent::getId();
    }

    public function getModule()
    {
        $this->_load();
        return parent::getModule();
    }

    public function setModule($module)
    {
        $this->_load();
        return parent::setModule($module);
    }

    public function getController()
    {
        $this->_load();
        return parent::getController();
    }

    public function setController($controller)
    {
        $this->_load();
        return parent::setController($controller);
    }

    public function getAction()
    {
        $this->_load();
        return parent::getAction();
    }

    public function setAction($action)
    {
        $this->_load();
        return parent::setAction($action);
    }

    public function getResourceId()
    {
        $this->_load();
        return parent::getResourceId();
    }

    public function getNavigationPage()
    {
        $this->_load();
        return parent::getNavigationPage();
    }

    public function getParent()
    {
        $this->_load();
        return parent::getParent();
    }

    public function setParent(\Entity\Resource $parent)
    {
        $this->_load();
        return parent::setParent($parent);
    }

    public function getRoleResources()
    {
        $this->_load();
        return parent::getRoleResources();
    }

    public function __toString()
    {
        $this->_load();
        return parent::__toString();
    }

    public function accept(\Equ\EntityVisitor $visitor)
    {
        $this->_load();
        return parent::accept($visitor);
    }

    public function getFieldValidators()
    {
        $this->_load();
        return parent::getFieldValidators();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'parent', 'children', 'lft', 'rgt', 'lvl', 'roleResources', 'module', 'controller', 'action', 'url');
    }
}